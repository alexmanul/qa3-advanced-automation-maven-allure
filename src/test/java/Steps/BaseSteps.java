package Steps;

import Elements.*;
import Utils.CommonApproach.IdentificatorReader;
import Utils.DriverSingleton;
import Utils.Hooks;
import Utils.TestProperties;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.ui.WebDriverWait;

public class BaseSteps {

    public final WebDriver driver = DriverSingleton.getInstance();
    public final WebDriverWait wait = new WebDriverWait(driver, Integer.parseInt(TestProperties.getProperty("selenium.explicit.wait")));
    protected String featureName = Hooks.featureName;
    protected String scenarioName = Hooks.scenarioName;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// BUTTON /////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    protected Button button(String page, String element) throws Exception {
        return new IdentificatorReader(page).getUIElement(element, Button.class);
    }

    protected Button buttonByButtonName(String page, String element, String buttonName) throws Exception {
        return new IdentificatorReader(page).getUIElementWithVariables(element, Button.class, buttonName);
    }

    protected Button buttonByButtonNumber(String page, String element, int buttonNumber) throws Exception {
        return new IdentificatorReader(page).getUIElementWithVariables(element, Button.class, buttonNumber);
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// LABEL //////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    protected Label label(String page, String element) throws Exception {
        return new IdentificatorReader(page).getUIElement(element, Label.class);
    }

    protected Label labelByLabelName(String page, String element, String labelName) throws Exception {
        return new IdentificatorReader(page).getUIElementWithVariables(element, Label.class, labelName);
    }

    protected Label labelByLabelNumber(String page, String element, int labelNumber) throws Exception {
        return new IdentificatorReader(page).getUIElementWithVariables(element, Label.class, labelNumber);
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// TEXTBOX ////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    protected TextBox textBox(String page, String element) throws Exception {
        return new IdentificatorReader(page).getUIElement(element, TextBox.class);
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// CHECKBOX ///////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    protected Checkbox checkbox(String page, String element) throws Exception {
        return new IdentificatorReader(page).getUIElement(element, Checkbox.class);
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// RADIO BUTTON ///////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    protected RadioButton radioButton(String page, String element) throws Exception {
        return new IdentificatorReader(page).getUIElement(element, RadioButton.class);
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// DATE PICKER ////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    protected DatePicker datePicker(String page, String element) throws Exception {
        return new IdentificatorReader(page).getUIElement(element, DatePicker.class);
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// DROPDOWN ///////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    protected Dropdown dropdown(String page, String element) throws Exception {
        return new IdentificatorReader(page).getUIElement(element, Dropdown.class);
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// ELEMENT LIST ///////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    protected ElementList elementList(String page, String element) throws Exception {
        return new IdentificatorReader(page).getUIElement(element, ElementList.class);
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// TRIGGER ////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    protected void executeMethod(String page, String method) throws Exception {
        new IdentificatorReader(page).executeMethod(method);
    }
}
